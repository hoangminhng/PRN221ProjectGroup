@page 
@model ChatSystem.Pages.Chat.ChatMasterModel
@{
}

<link rel="stylesheet" href="~/css/chatMaster.css">
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/js/signalr.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>


<div class="container chat-section" style="width: 1920px">
    <div class="row g-0">

@*         <div class="container col-12 col-lg-5 col-xl-3 border-end chat-list">
 *@        <div class="col-12 col-md-2 border-end chat-list" id="conversation-list">
            @if(Model.ConversationDtoList.Count < 1)
            {
            }else{
                <script>
                    var conversationIdsString = [
                    @foreach (var conversationDtoMember in Model.ConversationDtoList)
                    {
                        // Output each ConversationId as a JavaScript string literal
                        @: '@conversationDtoMember.ConversationId',
                        
                    }];

                    // Now you have all ConversationIds in the conversationIds array
                    var conversationIds = conversationIdsString.map(function (id) {
                        return parseInt(id, 10);
                    });

                    //send message
                    "use strict";

                    var conversationIdFromModelString = @((Model.conversationDto != null) ? Model.conversationDto.ConversationId : 0);
                    var conversationIdFromModel = parseInt(conversationIdFromModelString, 10);

                    var connection = new signalR.HubConnectionBuilder().withUrl("/message").build();
                    connection.start()
                        .then(() => console.log("SignalR Connected"))
                        .catch(err => console.error("SignalR Connection Error: ", err));

                    connection.on("OnNeedToUploadConversationList", (conversationId, message) => {
                        console.log("Load Converstaion List");
                        if (conversationIds.includes(conversationId)) {
                            console.log("Conversation ID matches: ", conversationId);
                            loadConversationList();
                            console.log("conversationIdFromModel: " + conversationIdFromModel);
                            if (conversationIdFromModel != conversationId) {
                                console.log("new message here! toaster should appear");
                                toastr.success('You have new message')
                            }   
                        }
                    });

                    function loadConversationList() {
                        $.ajax({
                            url: '/Chat/ChatMaster?handler=LoadConversationList',
                            method: 'GET',
                            success: function (data) {
                                $('#conversation-list').html(data);
                                console.log("Conversation list loaded successfully.");
                            },
                            error: function (err) {
                                console.error('Failed to fetch message list:', err);
                            }
                        });
                    }

                </script>

                @await Html.PartialAsync("_ChatConversationList", Model.ConversationDtoList)
                

            }
            
            <hr class="d-block d-lg-none mt-1 mb-0" />
        </div>

        @if (Model.conversationDto == null)
        {
            <div class="container col-12 col-md-7">
                <div class="d-flex align-items-center justify-content-center">No Conversation Choosen</div>
            </div>
        }
        else{
            <script>

                var connection = new signalR.HubConnectionBuilder().withUrl("/message").build();


                connection.start().then(res => {
                    connection.invoke("JoinGroup", "@Model.conversationDto.ConversationId") 
                        .catch(err => {
                            console.log(err);
                        });
                    }).catch (err => {
                    console.log(err);
                });;



                connection.on("OnSendMessageInConversation", (conversationId, message) => {
                    loadMessage(conversationId);
                });

                function loadMessage(conversationId) {
                    $.ajax({
                        url: '/Chat/ChatMaster?handler=LoadMessage&conversationId=' + conversationId,
                        method: 'GET',
                        success: function (data) {
                            $('#all-chat-message').html(data);
                            console.log("Messages loaded successfully.");
                        },
                        error: function (err) {
                            console.error('Failed to fetch message list:', err);
                        }
                    });
                }
            </script>

            <div class="col-12 col-md-8">
                @await Html.PartialAsync("_ChatHeader", Model.conversationDto)

            <div class="chat-messages-section p-4">
                <div class="all-chat-message" id="all-chat-message">
                     @await Html.PartialAsync("_ChatContent", Model.ChatContentModel)
                </div>

                <div class="flex-grow-0 py-3 px-4 border-top">
                    <form method="post" asp-page-handler="SendMessage" id="sendMessageForm">
                        <input type="hidden" asp-for="conversationDto.ConversationId"/>
                        <div class="input-group">
                                <textarea asp-for="@Model.MessageContent" id="messageTextArea" type="text" class="form-control" placeholder="Type your message" rows="2"></textarea>
                            
                            <button id="sendBtn" type="submit" class="btn btn-primary">Send</button>
                        </div>
                    </form>
                </div>
            </div>



        </div>
        
      
            <div class="col-12 col-md-2">
                @if (Model.conversationDto.isGroup)
                {
                    <div style="margin-left: 7px">
                        <div class="card-body">
                            <div class="position-relative text-center mb-3">
                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle me-1" width="60" height="60">
                            </div>
                            <h5 class="card-title text-center">@Model.currentConversation.ConversationName</h5>
                            <hr class="mb-4">
                            <h6>Group Members:</h6>
                            @foreach (var participant in Model.GroupChatParticipants)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @participant.KnownAs
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item kick-participant" data-participant-id="@participant.UserId" data-conversation-id="@Model.conversationDto.ConversationId" href="#">Kick</a></li>
                                            <li><a class="dropdown-item promote-participant" data-participant-id="@participant.UserId" data-conversation-id="@Model.conversationDto.ConversationId" href="#">Promote</a></li>
                                        </ul>
                                    </div>
                                </li>

                            }
                            <button type="button" class="btn btn-primary mt-3"
                                    onclick="showAddUserModal(@Model.conversationDto.ConversationId)">
                                Invite
                            </button>
                            <button type="button" class="btn btn-primary mt-3 delete-group" data-conversation-id="@Model.conversationDto.ConversationId">Delete group</button>
                            <button type="button" class="btn btn-primary mt-3 edit-group-name" data-conversation-id="@Model.conversationDto.ConversationId">Edit group name</button>
                            <button type="button" class="btn btn-danger mt-3" 
                                    onclick="outGroupModal(@Model.conversationDto.ConversationId)">
                                Quit
                            </button>
                        </div>
                    </div>

                }
                else
                {

                }

            </div>
        }
        
    </div>
</div>




<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/js/OnlineStatus.js"></script>
<script src="~/js/signalr.js"></script>

<script>
    //String.prototype.nl2br = function () {
    //    return this.replace(/\r\n/g, "<br />");
    //}

    $(function () {
        // Handle form submission on Enter key press
        $("textarea").keypress(function (event) {
            if (event.keyCode == 13 && !event.shiftKey) {
                $("#sendMessageForm").submit(); // Submit the form when Enter key is pressed
                return false; // Prevent default form submission
            }
        });

         //Handle form submission
        $('#sendMessageForm').submit(function (event) {
            event.preventDefault(); 
            var formData = $(this).serialize();  

          
            $.ajax({
                url: '/Chat/ChatMaster?handler=SendMessage', 
                method: 'POST',
                data: formData, 
                success: function (data) {
     
                    console.log("Message sent successfully");
                
                    $("#messageTextArea").val('');
                },
                error: function (err) {
                    console.error('Failed to send message:', err);
                }
            });
        });
    });


    
</script>



<script>
    // Function to handle click on "Promote"
    const handlePromoteParticipantClick = (event) => {
        event.preventDefault();

        const participantId = parseInt(event.target.dataset.participantId);
        const conversationId = parseInt(event.target.dataset.conversationId);

        document.getElementById('conversationIdInput').value = conversationId;
        document.getElementById('userIdInput').value = participantId;

        $("#promoteConfirmationModal").modal("show");
    };

    document.addEventListener("click", (event) => {
        if (event.target.classList.contains("promote-participant")) {
            handlePromoteParticipantClick(event);
        }
    });



    // Function to handle click events on kick participant links
    const handleKickParticipantClick = (event) => {
        event.preventDefault();

        const participantId = parseInt(event.target.dataset.participantId);
        const conversationId = parseInt(event.target.dataset.conversationId);

        document.getElementById('conversationId').value = conversationId;
        document.getElementById('userId').value = participantId;

        $("#kickConfirmationModal").modal("show");
    };

    document.addEventListener("click", (event) => {
        if (event.target.classList.contains("kick-participant")) {
            handleKickParticipantClick(event);
        }
    });


    //show Edit Modal

    const handleEditGroupNameClick = (event) => {
        event.preventDefault();

        const conversationId = parseInt(event.target.dataset.conversationId);

        document.getElementById('conversationIdGroup').value = conversationId;

        $('#editGroupModal').modal('show');
    };

    document.addEventListener("click", (event) => {
        if (event.target.classList.contains("edit-group-name")) {
            handleEditGroupNameClick(event);
        }
    });

    //show delete Modal
    const handleDeleteGroupClick = (event) => {
        event.preventDefault();

        const conversationId = parseInt(event.target.dataset.conversationId);

        document.getElementById('conversationIdDelete').value = conversationId;

        $('#deleteGroupModal').modal('show');
    };

    document.addEventListener("click", (event) => {
        if (event.target.classList.contains("delete-group")) {
            handleDeleteGroupClick(event);
        }
    });

</script>

<div class="modal fade" id="promoteConfirmationModal" tabindex="-1" aria-labelledby="promoteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="promoteConfirmationModalLabel">Promote User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to promote this user to admin?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-page-handler="PromoteUserToAdmin" method="post">
                    <input type="hidden" name="conversationId" id="conversationIdInput">
                    <input type="hidden" name="userId" id="userIdInput">
                    <button type="submit" class="btn btn-primary">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="kickConfirmationModal" tabindex="-1" aria-labelledby="kickConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="kickConfirmationModalLabel">Kick User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to kick this user?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-page-handler="KickUserFromGroup" method="post">
                    <input type="hidden" name="conversationId" id="conversationId">
                    <input type="hidden" name="userId" id="userId">
                    <button type="submit" class="btn btn-primary">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="editGroupModal" tabindex="-1" role="dialog" aria-labelledby="editGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editGroupModalLabel">Edit Group Name</h5>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="EditGroupName">
                    <input type="hidden" name="conversationId" id="conversationIdGroup">
                    <div class="form-group">
                        <input type="text" class="form-control" id="newGroupName" name="newGroupName" placeholder="Enter new group name">
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteGroupModal" tabindex="-1" aria-labelledby="deleteGroupModalLable" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteGroupModalLable">Delete Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the group?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-page-handler="DeleteGroup" method="post">
                    <input type="hidden" name="conversationId" id="conversationIdDelete">
                    <button type="submit" class="btn btn-primary">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Begin invite memeber modal  -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
        <form method="post" >
          <div class="modal-header text-center">
            <h5 class="modal-title" id="addUserModalLabel">Invite your friends</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
                <input type="hidden" id="conversationIdInviteGroup" name="conversationId" />
                <div id="friendListContainer">
                    <input type="hidden" asp-for="SelectedFriends" id="selectedFriendsInput"/>
                    <!--  -->
                </div>
          </div>
          <div class="modal-footer">
            <button id="addButton" type="submit" class="btn btn-primary" asp-page-handler="AddUserToGroup">Invite</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
      </form>
    </div>
  </div>
</div>
<!-- End invite memeber modal  -->

<!-- Begin quit group modal  -->
<div class="modal fade" id="outGroupModal" tabindex="-1" aria-labelledby="outGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post">
                <input type="hidden" id="conversationIdOutGroup" name="conversationId" />
                <div class="modal-header text-center">
                    <h5 class="modal-title">Out Conversation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                @if(Model.IsLastAdminLogined && !Model.IsLastMemberLogined)
                {
                    <div class="modal-body">
                        Your are the last admin in this conversation, before you out, promote somebody!
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                }
                else if (Model.IsLastMemberLogined)
                {
                    <div class="modal-body">
                        You are the last member in this conversation, wanna out ??
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" asp-page-handler="OutGroup">Quit</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>                   
                }
                else
                {
                    <div class="modal-body">
                        Are you sure you want to out this conversation ??
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" asp-page-handler="OutGroup">Quit</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                }
            </form>
        </div>
    </div>
</div>
<!-- End quit group modal  -->

<script>
    function showAddUserModal(conversationId) {
        document.getElementById('conversationIdInviteGroup').value = conversationId;
        $('#addUserModal').modal('show');

        $('#conversationIdInviteGroup').val(conversationId);
        console.log(conversationId);

        $('#friendListContainer').load('/Chat/ChatMaster?handler=FriendListPartial&conversationId=' + conversationId);
        console.log("LOADED");
    }

    function outGroupModal(conversationId) {
        document.getElementById('conversationIdOutGroup').value = conversationId;
        $('#outGroupModal').modal('show');

        $('#conversationIdOutGroup').val(conversationId);
    }
</script>


@section Scripts {
    <script>
        var selectedFriends = [];

        function addOrRemoveFriend(checkbox) {
            var friendId = checkbox.value;
            console.log(friendId);

            if (checkbox.checked) {
                if (!selectedFriends.some(friend => friend.id === friendId)) {
                    selectedFriends.push({ id: friendId });
                }
            } else {
                selectedFriends = selectedFriends.filter(friend => friend.id !== friendId);
            }

            console.log(selectedFriends);

            updateCreateButton();

            var selectedFriendsInput = document.getElementById('selectedFriendsInput');
            selectedFriendsInput.value = JSON.stringify(selectedFriends.map(friend => friend.id));
            console.log(selectedFriendsInput.value);
        }

        function updateCreateButton() {
            var createButton = document.getElementById('addButton');
            if (selectedFriends.length === 0) {
                createButton.disabled = true;
            } else {
                createButton.disabled = false;
            }
        }
        updateCreateButton();

    </script>
}
    