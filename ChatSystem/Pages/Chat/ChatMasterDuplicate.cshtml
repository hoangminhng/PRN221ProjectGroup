@page 
@model ChatSystem.Pages.Chat.ChatMasterDuplicateModel
@{
}
<div class="container chat-section">
    <div class="row g-0">

@*         <div class="container col-12 col-lg-5 col-xl-3 border-end chat-list">
 *@        <div class="col-12 col-md-3 border-end chat-list">
            <div class="px-4 d-none d-md-block">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1 search-box">
                        <input type="text" class="form-control my-3" placeholder="Search..." />
                    </div>
                </div>
            </div>

            @foreach (var conversationDtoMember in Model.ConversationDtoList)
            {
                if (conversationDtoMember.isGroup)
                {


                    <a asp-page="/Chat/ChatMasterDuplicate" asp-route-id="@conversationDtoMember.ConversationId"
                        class="list-group-item list-group-item-action border-0">
                        <div class="badge bg-success float-end">5</div> 
                        <div class="d-flex align-items-start">
                                <img src="https://bootdey.com/img/Content/avatar/avatar5.png" class="rounded-circle me-1" alt="@conversationDtoMember.ConversationName" width="40" height="40" />
                            <div class="flex-grow-1 ms-3">
                                    @conversationDtoMember.ConversationName
                                <div class="small"><span class="fas fa-circle chat-online"></span> Online</div>
                            </div>
                        </div>
                    </a>
                 
                }
                else
                {

                    <a asp-page="/Chat/ChatMasterDuplicate" asp-route-id="@conversationDtoMember.ConversationId"
                        class="list-group-item list-group-item-action border-0">
                        <div class="badge bg-success float-end">5</div>
                        <div class="d-flex align-items-start">
                                <img src="@conversationDtoMember.Avatar" class="rounded-circle me-1" alt="@conversationDtoMember.OtherUserId" width="40" height="40" />
                            <div class="flex-grow-1 ms-3">
                                    @conversationDtoMember.OtherUserName
                                <div class="small"><span class="fas fa-circle chat-online"></span> Online</div>
                            </div>
                        </div>
                    </a>
                   
                }
                
            }
            
            <hr class="d-block d-lg-none mt-1 mb-0" />
        </div>

        @if (Model.conversationDto == null)
        {
            <div class="container col-12 col-md-7">
                <div class="d-flex align-items-center justify-content-center">No Conversation Choosen</div>
            </div>
        }
        else{


            <div class="col-12 col-md-7">
                @if (Model.conversationDto.isGroup)
                {
                    <div class="py-2 px-4 border-bottom d-none d-lg-block">
                        <div class="d-flex align-items-center py-1">
                            <div class="position-relative">
                                <img src="https://bootdey.com/img/Content/avatar/avatar5.png" class="rounded-circle me-1" alt="@Model.conversationDto.ConversationName" width="40" height="40" />
                            </div>
                            <div class="flex-grow-1 ps-3">
                                <strong>@Model.conversationDto.ConversationName</strong>
                                <div class="text-muted small"><em>Typing...</em></div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="py-2 px-4 border-bottom d-none d-lg-block">
                        <div class="d-flex align-items-center py-1">
                            <div class="position-relative">
                                <img src="@Model.conversationDto.Avatar" class="rounded-circle me-1" alt="@Model.conversationDto.OtherUserName" width="40" height="40" />
                            </div>
                            <div class="flex-grow-1 ps-3">
                                <strong>@Model.conversationDto.OtherUserName</strong>
                                <div class="text-muted small"><em>Typing...</em></div>
                            </div>
                        </div>
                    </div>
                }
                

            
                <div class="chat-messages-section p-4">
                    <div class="all-chat-message">
                    <div class="chat-message-left pb-4">
                        <div>
                            <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle me-1" alt="Sharon Lessman" width="40" height="40" />
                            <div class="text-muted small text-nowrap mt-2">2:42 am</div>
                        </div>
                        <div class="flex-shrink-1 bg-light rounded py-2 px-3 ms-3">
                            <div class="fw-bold mb-1">Sharon Lessman</div>
                            Sed pulvinar, massa vitae interdum pulvinar, risus lectus porttitor magna, vitae commodo lectus mauris et velit. Proin ultricies placerat imperdiet. Morbi varius quam
                            ac venenatis tempus.
                            </div>
                        </div>
                    </div>

                <div class="flex-grow-0 py-3 px-4 border-top">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Type your message" />
                        <button class="btn btn-primary">Send</button>
                    </div>
                </div>
            </div>
        </div>


            <div class="col-12 col-md-2">
                @if (Model.conversationDto.isGroup)
                {
                    <div style="margin-left: 7px">
                        <div class="card-body">
                            <div class="position-relative text-center mb-3">
                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle me-1" width="60" height="60">
                            </div>
                            <h5 class="card-title text-center">@Model.currentConversation.ConversationName</h5>
                            <hr class="mb-4">
                            <h6>Group Members:</h6>
                            @foreach (var participant in Model.GroupChatParticipants)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @participant.KnownAs
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-light dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item kick-participant" data-participant-id="@participant.UserId" data-conversation-id="@Model.conversationDto.ConversationId" href="#">Kick</a></li>
                                            <li><a class="dropdown-item promote-participant" data-participant-id="@participant.UserId" data-conversation-id="@Model.conversationDto.ConversationId" href="#">Promote</a></li>
                                        </ul>
                                    </div>
                                </li>

                            }
                            <button type="button" class="btn btn-primary mt-3" 
                            onclick="showAddUserModal(@Model.conversationDto.ConversationId)">
                                Invite
                            </button>
                            <button type="button" class="btn btn-primary mt-3">Delete Group</button>
                            <button type="button" class="btn btn-primary mt-3" id="editGroupButton">Edit Group Name</button>
                            <button type="button" class="btn btn-danger mt-3" 
                            onclick="outGroupModal(@Model.conversationDto.ConversationId)">
                                Out
                            </button>
                        </div>
                    </div>

                } 
                else
                {
                    
                }
                
            </div>
        }
        
    </div>
    <script>
        //show Promote Modal
        const handlePromoteParticipantClick = (event) => {
            event.preventDefault();

            const participantId = parseInt(event.target.dataset.participantId);
            const conversationId = parseInt(event.target.dataset.conversationId);

            const modalBody = document.querySelector("#promoteConfirmationModal .modal-body");
            modalBody.textContent = `Are you sure you want to promote this user to admin?`;

            const confirmPromotionBtn = document.querySelector(".confirm-promotion");
            confirmPromotionBtn.addEventListener("click", () => {
                promoteParticipant(conversationId, participantId);
            });

            $("#promoteConfirmationModal").modal("show");
        };

        //handle Promote
        async function promoteParticipant(conversationId, userId) {
            try {
                const response = await fetch(`/ChatMasterDuplicate/PromoteUserToAdmin?conversationId=${conversationId}&userId=${userId}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    console.log('User promoted to admin successfully');
                } else {
                    console.error('Failed to promote user to admin');
                }
            } catch (error) {
                console.error('Error promoting user to admin:', error);
            }
        }

        document.addEventListener("click", (event) => {
            if (event.target.classList.contains("promote-participant")) {
                handlePromoteParticipantClick(event);
            }
        });

        document.addEventListener("click", (event) => {
            if (event.target.classList.contains("kick-participant")) {
                handleKickParticipantClick(event);
            }
        });


        // Function to handle click events on kick participant links
        const handleKickParticipantClick = (event) => {
            event.preventDefault();

            const participantId = parseInt(event.target.dataset.participantId);
            const conversationId = parseInt(event.target.dataset.conversationId);

            $("#kickConfirmationModal").modal("show");

            const confirmKickBtn = document.querySelector(".confirm-kick");
            confirmKickBtn.addEventListener("click", () => {
                kickParticipant(conversationId, participantId);
            });
        };

        // Function to kick a participant from the conversation
        async function kickParticipant(conversationId, userId) {
            try {
                const response = await fetch(`/ChatMasterDuplicate/KickUserFromGroup?conversationId=${conversationId}&userId=${userId}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    console.log('User kicked successfully');
                } else {
                    console.error('Failed to kick user');
                }
            } catch (error) {
                console.error('Error kicking user:', error);
            }
        }



        //show Edit Modal
        const editGroupButton = document.getElementById('editGroupButton');

        editGroupButton.addEventListener('click', () => {
            $('#editGroupModal').modal('show'); 
        });


    </script>

</div>

<div class="modal fade" id="promoteConfirmationModal" tabindex="-1" aria-labelledby="promoteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="promoteConfirmationModalLabel">Promote User</h5>
            </div>
            <div class="modal-body">
                Are you sure you want to promote this user to admin?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary confirm-promotion" data-dismiss="modal">Promote</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="kickConfirmationModal" tabindex="-1" aria-labelledby="kickConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="kickConfirmationModalLabel">Kick User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to kick this user?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary confirm-kick">Confirm</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="editGroupModal" tabindex="-1" role="dialog" aria-labelledby="editGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editGroupModalLabel">Edit Group Name</h5>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="newGroupName">New Group Name</label>
                        <input type="text" class="form-control" id="newGroupName" name="newGroupName" placeholder="Enter new group name">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveGroupName">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Begin invite memeber modal  -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
        <form method="post" >
          <div class="modal-header text-center">
            <h5 class="modal-title" id="addUserModalLabel">Invite your friends</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
                <input type="hidden" id="conversationIdInput" name="conversationId" />
                <div id="friendListContainer">
                    <input type="hidden" asp-for="SelectedFriends" id="selectedFriendsInput"/>
                    <!--  -->
                </div>
          </div>
          <div class="modal-footer">
            <button id="addButton" type="submit" class="btn btn-primary" asp-page-handler="AddUserToGroup">Invite</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
      </form>
    </div>
  </div>
</div>
<!-- End invite memeber modal  -->

<!-- Begin out group modal  -->
<div class="modal fade" id="outGroupModal" tabindex="-1" aria-labelledby="outGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post">
                <input type="hidden" id="conversationIdOutGroup" name="conversationId" />
                <div class="modal-header text-center">
                    <h5 class="modal-title">Out Conversation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                @if(Model.IsLastAdminLogined && !Model.IsLastMemberLogined)
                {
                    <div class="modal-body">
                        Your are the last admin in this conversation, before you out, promote somebody!
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                }
                else if (Model.IsLastMemberLogined)
                {
                    <div class="modal-body">
                        You are the last member in this conversation, wanna out ??
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" asp-page-handler="OutGroup">Out</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>                   
                }
                else
                {
                    <div class="modal-body">
                        Are you sure you want to out this conversation ??
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" asp-page-handler="OutGroup">Out</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                }
            </form>
        </div>
    </div>
</div>
<!-- End out group modal  -->

<script>
    function showAddUserModal(conversationId) {
        document.getElementById('conversationIdInput').value = conversationId;
        $('#addUserModal').modal('show');

        $('#conversationIdInput').val(conversationId);
        console.log(conversationId);

        $('#friendListContainer').load('/Chat/ChatMasterDuplicate?handler=FriendListPartial&conversationId=' + conversationId);
        console.log("LOADED");
    }

    function outGroupModal(conversationId) {
        document.getElementById('conversationIdOutGroup').value = conversationId;
        $('#outGroupModal').modal('show');

        $('#conversationIdOutGroup').val(conversationId);
    }
</script>


@section Scripts {
    <script>
        var selectedFriends = [];

        function addOrRemoveFriend(checkbox) {
            var friendId = checkbox.value;
            console.log(friendId);

            if (checkbox.checked) {
                if (!selectedFriends.some(friend => friend.id === friendId)) {
                    selectedFriends.push({ id: friendId });
                }
            } else {
                selectedFriends = selectedFriends.filter(friend => friend.id !== friendId);
            }

            console.log(selectedFriends);

            updateCreateButton();

            var selectedFriendsInput = document.getElementById('selectedFriendsInput');
            selectedFriendsInput.value = JSON.stringify(selectedFriends.map(friend => friend.id));
            console.log(selectedFriendsInput.value);
        }

        function updateCreateButton() {
            var createButton = document.getElementById('addButton');
            if (selectedFriends.length === 0) {
                createButton.disabled = true;
            } else {
                createButton.disabled = false;
            }
        }
        updateCreateButton();

    </script>
}


<style>
    html, body {
        margin: 0;
        height: 120%;
        overflow: hidden
    }



	.chat-online {
		color: #34ce57
	}

	.chat-offline {
		color: #e4606d
	}


    .chat-list{
        max-height: 80vh;
        overflow-y: scroll
    }   
    .chat-list > * {
        margin: 20px 0;
        padding: 0 10px;
    }

    .chat-list > *:first-child {
        margin-top: 0px;
    }

	.chat-messages-section {
		display: flex;
		flex-direction: column;
		max-height: 80vh;
		overflow: hidden;
        padding-bottom: 10px
	}
    .all-chat-message{
        grid-column: 2;
        grid-row: 2;
        overflow-y: scroll;
        align-content: end;
        display: flex;
        flex-direction: column-reverse;
    }

	.chat-message-left,
	.chat-message-right {
		display: flex;
		flex-shrink: 0
	}

	.chat-message-left {
		margin-right: auto
	}

	.chat-message-right {
		flex-direction: row-reverse;
		margin-left: auto
	}

	.py-3 {
		padding-top: 1rem !important;
		padding-bottom: 1rem !important;
	}

	.px-4 {
		padding-right: 1.5rem !important;
		padding-left: 1.5rem !important;
	}

	.flex-grow-0 {
		flex-grow: 0 !important;
	}

	.border-top {
		border-top: 1px solid #dee2e6 !important;
	}
</style>